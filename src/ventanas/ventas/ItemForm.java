/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas.ventas;

import controllers.ProductJpaController;
import entities.Billing;
import entities.DetailBilling;
import entities.Product;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.text.JTextComponent;
import utilitarios.ComboKeyHandler;
import utilitarios.Utilitario;

/**
 *
 * @author macbookpro
 */
public class ItemForm extends javax.swing.JDialog implements ActionListener, KeyListener {

    static ProductJpaController controllerProducto;
//    private final Vector list = new Vector();
    private List<String> list = new ArrayList<>();
//    static List<String> products;
    private List<Product> products = new ArrayList<>();
    private List<DetailBilling> details;
    private String mensaje;

    /**
     * Creates new form VentasForm
     */
    public ItemForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        controllerProducto = new ProductJpaController();
        initComponents();
    }

    public ItemForm(java.awt.Frame parent, boolean modal, DetailBilling db, List<DetailBilling> details) {
        super(parent, modal);
        controllerProducto = new ProductJpaController();
        this.details = details;
        this.detailBilling = db;
        fijarEntidad();
        initComponents();
        this.setLocationRelativeTo(this);

    }

    private void fijarEntidad() {
//        nombres.setText(this.user.getPersonId().getNames());
//        apellidos.setText(this.user.getPersonId().getLastname());
//        identificacion.setText(this.user.getPersonId().getPassport());
//        direccion.setText(this.user.getPersonId().getAddress());
//        correo.setText(this.user.getPersonId().getEmail());
//        usuario.setText(this.user.getNick());
//        rol.setSelectedItem(this.user.getRol());
//        if (this.user.getId() == null) {
//            clave.setEnabled(true);
//            cambiarClave.setVisible(false);
//        } else {
//            clave.setEnabled(false);
//            cambiarClave.setVisible(true);
//        }
//
//        if (this.user.getPersonId().getSex().equals("M")) {
//            sexo = "M";
//            masculino.setSelected(true);
//        } else {
//            sexo = "F";
//            femenino.setSelected(true);
//        }
//
//        if (this.user.getActive()) {
//            estado.setSelected(true);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dBTable1 = new quick.dbtable.DBTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        combito = new javax.swing.JComboBox();
        combito.setEditable(true);
        JTextComponent editor = (JTextComponent) combito.getEditor().getEditorComponent();
        editor.addKeyListener(this);
        combito.addActionListener(this);
        txtTotal = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPorcentajeDesct = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtValorDesct = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalle de factura");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Stock:");

        txtStock.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Total:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Cantidad:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Detalle");

        btnGuardar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtTotal.setEditable(false);

        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantidadKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Producto:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Precio:");

        txtPrecio.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Porcentaje descuento:");

        txtPorcentajeDesct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPorcentajeDesctKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPorcentajeDesctKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Valor descuento:");

        txtValorDesct.setEditable(false);
        txtValorDesct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorDesctKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(362, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addGap(62, 62, 62)
                .addComponent(btnCancelar)
                .addGap(151, 151, 151))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorDesct, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPorcentajeDesct, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(40, 40, 40)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(combito, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(txtPorcentajeDesct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValorDesct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!noValido()) {
            details.add(detailBilling);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, mensaje,
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyReleased
//        if (!noValido()) {
        calcularTotal();
//        }
    }//GEN-LAST:event_txtCantidadKeyReleased

    private void txtPorcentajeDesctKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeDesctKeyReleased
//        if (!noValido()) {
        calcularTotal();
//        }
    }//GEN-LAST:event_txtPorcentajeDesctKeyReleased

    private void txtValorDesctKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorDesctKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorDesctKeyReleased

    private void txtCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyPressed
        // TODO add your handling code here:
        System.out.println("ssss");
    }//GEN-LAST:event_txtCantidadKeyPressed

    private void txtPorcentajeDesctKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeDesctKeyPressed
        // TODO add your handling code here:
        System.out.println("procentaje");
    }//GEN-LAST:event_txtPorcentajeDesctKeyPressed

    private boolean noValido() {
        Boolean error = Boolean.FALSE;
//        StringBuilder mensaje = new StringBuilder();

        if (detailBilling.getProductId() == null) {
            error = Boolean.TRUE;
//            mensaje.append("- Seleccione un producto. \n");
            mensaje = "- Seleccione un producto. \n";
            return error;
        }

        if (Utilitario.campoVacio(txtCantidad.getText())) {
            error = Boolean.TRUE;
//            mensaje.append("- Campo Cantidad es obligatorio. \n");
            mensaje = "- Campo Cantidad es obligatorio. \n";
            return error;
        }

        if (!Utilitario.campoVacio(txtCantidad.getText())
                && detailBilling.getQuantity().compareTo(detailBilling.getProductId().getStock()) == 1) {
            error = Boolean.TRUE;
//                mensaje.append("- El campo cantidad no puede ser superior al stock. \n");
            mensaje = "- El campo cantidad no puede ser superior al stock. \n";
            return error;
        }

        if (detailBilling.getTotal().compareTo(BigDecimal.ZERO) == 0) {
            error = Boolean.TRUE;
//                mensaje.append("- El campo cantidad no puede ser superior al stock. \n");
            mensaje = "- El campo total no puede ser igual a 0. \n";
            return error;
        }

        if (Utilitario.campoVacio(txtPorcentajeDesct.getText())) {
            error = Boolean.TRUE;
//            mensaje.append("- Campo Porcentaje descuento es obligatorio \n");
            mensaje = "- Campo Porcentaje descuento es obligatorio \n";
            return error;
        }

//        if (!mensaje.toString().isEmpty()) {
//            JOptionPane.showMessageDialog(this, mensaje.toString(),
//                    "ERROR", JOptionPane.ERROR_MESSAGE);
//        }
        return error;
    }

    private void calcularTotal() {
        BigDecimal cantidad;
        BigDecimal porcentajeDesct = BigDecimal.ZERO;
        BigDecimal valorDesct = BigDecimal.ZERO;
        BigDecimal total;
        BigDecimal totalConImpto;
        BigDecimal iva;
        if (product != null) {
//            if (!Utilitario.campoVacio(txtCantidad.getText())) {
            cantidad = getBigDecimal(txtCantidad.getText());
            total = cantidad.multiply(product.getSaleprice()).setScale(2, BigDecimal.ROUND_HALF_UP);;
//            if (!Utilitario.campoVacio(txtPorcentajeDesct.getText())) {
            porcentajeDesct = getBigDecimal(txtPorcentajeDesct.getText());
            valorDesct = total.multiply(porcentajeDesct).setScale(2, BigDecimal.ROUND_HALF_UP);;
            valorDesct = (valorDesct).divide(new BigDecimal("100")).setScale(2, BigDecimal.ROUND_HALF_UP);;
            total = total.subtract(valorDesct);
//            }
            detailBilling.setQuantity(cantidad);
            detailBilling.setPercentageDiscount(porcentajeDesct);
            detailBilling.setValueDiscount(valorDesct);
            detailBilling.setTotal(total);
            iva = (product.getPercentageIva().multiply(total)).setScale(2, BigDecimal.ROUND_HALF_UP).
                    divide(new BigDecimal("100")).setScale(2, BigDecimal.ROUND_HALF_UP);;
            totalConImpto = total.add(iva);
            detailBilling.setTotalWithTax(totalConImpto);
            detailBilling.setValueIva(iva);
            detailBilling.setPercentageIva(product.getPercentageIva());
            txtTotal.setText(total.toString());
            txtValorDesct.setText(valorDesct.toString());
//            } 
        }

    }

    private BigDecimal getBigDecimal(String a) {
        BigDecimal value;
        try {
            if (Utilitario.campoVacio(txtCantidad.getText())) {
                value = BigDecimal.ZERO;
            } else {
                value = new BigDecimal(a);
            }
        } catch (java.lang.NumberFormatException e) {
            System.out.println(">> excepcion");
            value = BigDecimal.ZERO;
        }
        return value;
    }

//    private BigDecimal getBigDecimal(String a) {
//        BigDecimal value;
//        try {
//            value = new BigDecimal(a);
//        } catch (java.lang.NumberFormatException e) {
//            System.out.println(">> excepcion");
//            value = null;
//        }
//        return value;
//    }
//    private Boolean checkNumbers(BigDecimal a, BigDecimal b) {
//        try {
//            
//            
//            
//            value = new BigDecimal(a);
//        } catch (java.lang.NumberFormatException e) {
//            System.out.println(">> excepcion");
//        }
//        return value;
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ItemForm dialog = new ItemForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private DetailBilling detailBilling;
    private Product product;

    public DetailBilling getDetailBilling() {
        return detailBilling;
    }

    public void setDetailBilling(DetailBilling detailBilling) {
        this.detailBilling = detailBilling;
    }

    public Product getProduct() {
        return product;
    }

    public void setProduct(Product product) {
        this.product = product;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox combito;
    private quick.dbtable.DBTable dBTable1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtPorcentajeDesct;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtValorDesct;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        System.out.println("AQUI YEA >>>");
        System.out.println(">>> " + combito.getSelectedIndex());
        int productoSel = combito.getSelectedIndex();
        if (productoSel != -1) {
            product = products.get(productoSel);
            System.out.println("PORDUCTO >>> " + product.getName() + product.getSaleprice());
            detailBilling.setProductId(product);
            detailBilling.setUnitaryPrice(product.getSaleprice());
            detailBilling.setQuantity(BigDecimal.ZERO);
            detailBilling.setPercentageDiscount(BigDecimal.ZERO);
            detailBilling.setValueDiscount(BigDecimal.ZERO);
            detailBilling.setValueIva(BigDecimal.ZERO);
            detailBilling.setPercentageIva(BigDecimal.ZERO);
            detailBilling.setTotal(BigDecimal.ZERO);
            detailBilling.setTotalWithTax(BigDecimal.ZERO);
            setValues();
        }

    }

    private void setValues() {
        if (detailBilling.getProductId() != null) {
            txtStock.setText(detailBilling.getProductId().getStock().toString());
            txtPrecio.setText(detailBilling.getProductId().getSaleprice().toString());
            txtCantidad.setText(detailBilling.getQuantity().toString());
            txtPorcentajeDesct.setText(detailBilling.getPercentageDiscount().toString());
            txtValorDesct.setText(detailBilling.getValueDiscount().toString());
            txtTotal.setText(detailBilling.getTotal().toString());
        }

    }

    @Override
    public void keyTyped(KeyEvent e) {
        System.out.println("typed");
    }

    @Override
    public void keyPressed(KeyEvent e) {
        System.out.println("pressed >>");
    }

    @Override
    public void keyReleased(KeyEvent e) {
        System.out.println("released");
        String text = ((JTextField) e.getSource()).getText();
        System.out.println("texto >>> " + text);
        try {
            if (text.equals("")) {
                System.out.println("no data");
                combito.setModel(getSuggestedModel(new Vector(), ""));
            } else {
                System.out.println("data");
                buscarProductos(text);
                setSuggestionModel(combito, getModelComboBox(list), text);
                combito.showPopup();
            }
        } catch (Exception ex) {
        }
    }

    private void buscarProductos(String criterio) {

        if (!criterio.trim().isEmpty()) {
            Map<String, Object> variables = new HashMap<String, Object>();
            variables.put("field", criterio.toLowerCase() + "%");
            products = controllerProducto.namedQuery("Product.findByCodeOrName", variables);
            list = listaProductos(products);
        }
    }

    private static void setSuggestionModel(JComboBox comboBox, ComboBoxModel mdl, String str) {
        comboBox.setModel(mdl);
        comboBox.setSelectedIndex(-1);
        ((JTextField) comboBox.getEditor().getEditorComponent()).setText(str);
    }

    private static ComboBoxModel getSuggestedModel(Vector list, String text) {
        DefaultComboBoxModel m = new DefaultComboBoxModel();
        for (Object obj : list) {
            String s = (String) obj;
            if (s.toUpperCase().contains(text.toUpperCase())) {
                m.addElement(s);
            }
        }
        return m;
    }

    private static ComboBoxModel getModelComboBox(List<String> list) {
        DefaultComboBoxModel m = new DefaultComboBoxModel();
        for (String val : list) {
            m.addElement(val);
        }
        return m;
    }

//    private static ComboBoxModel getModelComboBox(Vector list) {
//        DefaultComboBoxModel m = new DefaultComboBoxModel();
//        for (Object obj : list) {
//            m.addElement(obj);
//        }
//        return m;
//    }
//    public final String[] listaProductos(List<Product> lis) {
//
//        if (lis != null) {
//            Product p;
//            String[] cadena = new String[lis.size()];
//            for (int a = 0; a < lis.size(); a++) {
//                p = (Product) lis.get(a);
//                System.out.println(p.getName() + " " + p.getCode());
//                cadena[a] = p.getName() + " " + p.getCode();
//            }
//            return cadena;
//        } else {
//            String[] cadena = {};
//            System.out.println("No hay datos");
//            return cadena;
//        }
//    }
    public final List<String> listaProductos(List<Product> lis) {

//        if (lis != null) {
//        Product p;
//        String[] cadena = new String[lis.size()];
//        for (int a = 0; a < lis.size(); a++) {
//            p = (Product) lis.get(a);
//            System.out.println(p.getName() + " " + p.getCode());
//            cadena[a] = p.getName() + " " + p.getCode();
//        }
//            return cadena;
//        }else {
//            String[] cadena = {};
//            System.out.println("No hay datos");
//            return cadena;
//        }
        List<String> result = new ArrayList<>();
        String var;
        if (lis != null) {
            for (Product p : lis) {
                var = p.getName() + " " + p.getCode();
//                result.addElement(var);
                result.add(var);
            }
        }
        return result;
    }

}
